<?php

/**
 * This is the model base class for the table "Cobranza".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Cobranza".
 *
 * Columns in table "Cobranza" available as properties of the model,
 * followed by relations of table "Cobranza" available as properties of the model.
 *
 * @property integer $idcobranza
 * @property string $fecha
 * @property string $descripcioncobranza
 * @property string $importe
 * @property integer $ctactecliente_idctactecliente
 *
 * @property Ctactecliente $ctacteclienteIdctactecliente
 * @property Detallecobranza[] $detallecobranzas
 */
abstract class BaseCobranza extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Cobranza';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Cobranza|Cobranzas', $n);
	}

	public static function representingColumn() {
		return 'fecha';
	}

	public function rules() {
		return array(
			array('fecha, importe, ctactecliente_idctactecliente', 'required'),
			array('ctactecliente_idctactecliente', 'numerical', 'integerOnly'=>true),
			array('importe', 'numerical'),
			array('descripcioncobranza', 'length', 'max'=>45),
			array('descripcioncobranza', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcobranza, fecha, descripcioncobranza, importe, ctactecliente_idctactecliente', 'safe', 'on'=>'search'),
			
		);
	}

	public function relations() {
		return array(
			'ctacteclienteIdctactecliente' => array(self::BELONGS_TO, 'Ctactecliente', 'ctactecliente_idctactecliente'),
			'detallecobranzas' => array(self::HAS_MANY, 'Detallecobranza', 'cobranza_idcobranza'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcobranza' => Yii::t('app', 'Idcobranza'),
			'fecha' => Yii::t('app', 'Fecha'),
			'descripcioncobranza' => Yii::t('app', 'Descripcion'),
			'importe' => Yii::t('app', 'Importe'),
			'ctactecliente_idctactecliente' =>  Yii::t('app', 'Cliente'),
			'ctacteclienteIdctactecliente' => null,
			'detallecobranzas' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcobranza', $this->idcobranza);
		$criteria->compare('fecha', $this->fecha, true);
		$criteria->compare('descripcioncobranza', $this->descripcioncobranza, true);
		$criteria->compare('importe', $this->importe, true);
		$criteria->compare('ctactecliente_idctactecliente', $this->ctactecliente_idctactecliente);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
					'defaultOrder'=>'fecha ASC',
					),
		));
	}
	public function behaviors()
		{
			 return array(
		    	'datetimeI18NBehavior' => array('class' => 'ext.DateTimeI18NBehavior.DateTimeI18NBehavior'),
		    	'ERememberFiltersBehavior' => array(
	            	'class' => 'application.components.ERememberFiltersBehavior',
	               	'defaults'=>array(),           /* optional line */
	               	'defaultStickOnClear'=>false   /* optional line */
	           	),
		    
		   ); // 'ext' is in Yii 1.0.8 version. For early versions, use 'application.extensions' instead.
		}
	public function validarCant($attribute,$params){
      	$sqlidcheque="SELECT count(*) as cant FROM detallecobranza 
					  WHERE cobranza_idcobranza=".$this->idcobranza.";";
		$dbCommand = Yii::app()->db->createCommand($sqlidcheque);
		$resultado = $dbCommand->queryAll();
		
    	if((int) $resultado[0]['cant'] < 1){
   				$this->addError('idcobranza', 'Tiene que haber al menos un Item cargado');
  			}
    }
	
}