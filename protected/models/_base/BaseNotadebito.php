<?php

/**
 * This is the model base class for the table "notadebito".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Notadebito".
 *
 * Columns in table "notadebito" available as properties of the model,
 * followed by relations of table "notadebito" available as properties of the model.
 *
 * @property integer $idnotadebito
 * @property integer $nronotadebito
 * @property string $fecha
 * @property string $descripcion
 * @property integer $cliente_idcliente
 * @property integer $estado
 * @property double $iva
 * @property double $percepcionIIBB
 * @property double $importebruto
 * @property double $ivatotal
 * @property double $importeneto
 * @property double $importeIIBB
 * @property integer $asiento_idasiento
 * @property integer $cuenta_idcuenta
 *
 * @property Asiento[] $asientos
 */
abstract class BaseNotadebito extends GxActiveRecord {
	public $vista;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'notadebito';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Notadebito|Notadebitos', $n);
	}

	public static function representingColumn() {
		return 'fecha';
	}

	public function rules() {
		return array(
			array('nronotadebito, fecha, cliente_idcliente, iva, importeneto, cuenta_idcuenta', 'required'),
			array('nronotadebito, cliente_idcliente, estado, asiento_idasiento, cuenta_idcuenta', 'numerical', 'integerOnly'=>true),
			array('iva, percepcionIIBB, importebruto, ivatotal, importeneto, importeIIBB', 'numerical'),
			array('descripcion', 'length', 'max'=>255),
			array('descripcion, estado, percepcionIIBB, importebruto, ivatotal, importeIIBB, asiento_idasiento', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idnotadebito, nronotadebito, fecha, descripcion, cliente_idcliente, estado, iva, percepcionIIBB, importebruto, ivatotal, importeneto, importeIIBB, asiento_idasiento, cuenta_idcuenta', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'asientos' => array(self::HAS_MANY, 'Asiento', 'notadebito_idnotadebito'),
			'asientoIdasiento' => array(self::BELONGS_TO, 'Asiento', 'asiento_idasiento'),
			'clienteIdcliente' => array(self::BELONGS_TO, 'Cliente', 'cliente_idcliente'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idnotadebito' => Yii::t('app', 'Idnotadebito'),
			'nronotadebito' => Yii::t('app', 'Nro.Nota débito'),
			'fecha' => Yii::t('app', 'Fecha'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'cliente_idcliente' => Yii::t('app', 'Cliente'),
			'estado' => Yii::t('app', 'Estado'),
			'iva' => Yii::t('app', 'Iva'),
			'percepcionIIBB' => Yii::t('app', 'Percepcion Iibb'),
			'importebruto' => Yii::t('app', 'Importebruto'),
			'ivatotal' => Yii::t('app', 'Ivatotal'),
			'importeneto' => Yii::t('app', 'Importe Neto'),
			'importeIIBB' => Yii::t('app', 'Importe Iibb'),
			'asiento_idasiento' => Yii::t('app', 'Asiento Idasiento'),
			'cuenta_idcuenta' => Yii::t('app', 'Cuenta contable relacionada '),
			'asientos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idnotadebito', $this->idnotadebito);
		$criteria->compare('nronotadebito', $this->nronotadebito);
		$criteria->compare('fecha', $this->fecha, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('cliente_idcliente', $this->cliente_idcliente);
		$criteria->compare('estado', $this->estado);
		$criteria->compare('iva', $this->iva);
		$criteria->compare('percepcionIIBB', $this->percepcionIIBB);
		$criteria->compare('importebruto', $this->importebruto);
		$criteria->compare('ivatotal', $this->ivatotal);
		$criteria->compare('importeneto', $this->importeneto);
		$criteria->compare('importeIIBB', $this->importeIIBB);
		$criteria->compare('asiento_idasiento', $this->asiento_idasiento);
		$criteria->compare('cuenta_idcuenta', $this->cuenta_idcuenta);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	public function behaviors()
		{
			 return array(
		    	'datetimeI18NBehavior' => array('class' => 'ext.DateTimeI18NBehavior.DateTimeI18NBehavior'),
		    	'ERememberFiltersBehavior' => array(
	            	'class' => 'application.components.ERememberFiltersBehavior',
	               	'defaults'=>array(),           /* optional line */
	               	'defaultStickOnClear'=>false   /* optional line */
	           	),
		    
		   ); // 'ext' is in Yii 1.0.8 version. For early versions, use 'application.extensions' instead.
		}	
}