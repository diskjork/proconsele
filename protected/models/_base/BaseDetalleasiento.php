<?php

/**
 * This is the model base class for the table "detalleasiento".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Detalleasiento".
 *
 * Columns in table "detalleasiento" available as properties of the model,
 * followed by relations of table "detalleasiento" available as properties of the model.
 *
 * @property integer $iddetalleasiento
 * @property double $debe
 * @property double $haber
 * @property integer $cuenta_idcuenta
 * @property integer $asiento_idasiento
 * @property integer $proveedor_idproveedor
 * @property integer $cliente_idcliente
 * @property string $iddocumento
 *
 * @property Asiento $asientoIdasiento
 * @property Cliente $clienteIdcliente
 * @property Cuenta $cuentaIdcuenta
 * @property Proveedor $proveedorIdproveedor
 */
abstract class BaseDetalleasiento extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'detalleasiento';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Detalleasiento|Detalleasientos', $n);
	}

	public static function representingColumn() {
		return 'iddetalleasiento';
	}

	public function rules() {
		return array(
			array('cuenta_idcuenta', 'required'),
			array('cuenta_idcuenta, asiento_idasiento, proveedor_idproveedor, cliente_idcliente', 'numerical', 'integerOnly'=>true),
			array('debe, haber', 'numerical'),
			array('iddocumento', 'length', 'max'=>20),
			array('debe, haber, proveedor_idproveedor, cliente_idcliente, iddocumento', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iddetalleasiento, debe, haber, cuenta_idcuenta, asiento_idasiento, proveedor_idproveedor, cliente_idcliente, iddocumento', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'asientoIdasiento' => array(self::BELONGS_TO, 'Asiento', 'asiento_idasiento'),
			'clienteIdcliente' => array(self::BELONGS_TO, 'Cliente', 'cliente_idcliente'),
			'cuentaIdcuenta' => array(self::BELONGS_TO, 'Cuenta', 'cuenta_idcuenta'),
			'proveedorIdproveedor' => array(self::BELONGS_TO, 'Proveedor', 'proveedor_idproveedor'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'iddetalleasiento' => Yii::t('app', 'Iddetalleasiento'),
			'debe' => Yii::t('app', 'Debe'),
			'haber' => Yii::t('app', 'Haber'),
			'cuenta_idcuenta' => null,
			'asiento_idasiento' => null,
			'proveedor_idproveedor' => null,
			'cliente_idcliente' => null,
			'iddocumento' => Yii::t('app', 'Iddocumento'),
			'asientoIdasiento' => null,
			'clienteIdcliente' => null,
			'cuentaIdcuenta' => null,
			'proveedorIdproveedor' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iddetalleasiento', $this->iddetalleasiento);
		$criteria->compare('debe', $this->debe);
		$criteria->compare('haber', $this->haber);
		$criteria->compare('cuenta_idcuenta', $this->cuenta_idcuenta);
		$criteria->compare('asiento_idasiento', $this->asiento_idasiento);
		$criteria->compare('proveedor_idproveedor', $this->proveedor_idproveedor);
		$criteria->compare('cliente_idcliente', $this->cliente_idcliente);
		$criteria->compare('iddocumento', $this->iddocumento, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}