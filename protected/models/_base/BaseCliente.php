<?php

/**
 * This is the model base class for the table "cliente".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Cliente".
 *
 * Columns in table "cliente" available as properties of the model,
 * followed by relations of table "cliente" available as properties of the model.
 *
 * @property integer $idcliente
 * @property string $nombre
 * @property string $cuit
 * @property string $direccion
 * @property string $telefono
 * @property string $nombrecontacto
 * @property string $email
 * @property string $web
 * @property integer $localidad_idlocalidad
 * @property integer $tipodecontribuyente_idtipodecontribuyente
 * @property string $created
 * @property string $modified
 *
 * @property Localidad $localidadIdlocalidad
 * @property Tipodecontribuyente $tipodecontribuyenteIdtipodecontribuyente
 * @property Ctacte[] $ctactes
 * @property Factura[] $facturas
 */
abstract class BaseCliente extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'cliente';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Cliente|Clientes', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, cuit, localidad_idlocalidad, tipodecontribuyente_idtipocontribuyente', 'required'),
			array('localidad_idlocalidad, tipodecontribuyente_idtipocontribuyente, estado', 'numerical', 'integerOnly'=>true),
			array('nombre, direccion, telefono, nombrecontacto, email, web', 'length', 'max'=>45),
			array('cuit', 'length', 'max'=>13,'min'=>13),
			array('created, modified', 'safe'),
			array('email','email'),
			array('web','url'),
			array('direccion, telefono, nombrecontacto, email, web, created, modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcliente, nombre, cuit, direccion, telefono, nombrecontacto, email, web, localidad_idlocalidad, tipodecontribuyente_idtipocontribuyente, created, modified, estado', 'safe', 'on'=>'search'),
			array('modified','default',
            	'value'=>new CDbExpression('NOW()'),
                'setOnEmpty'=>false,'on'=>'update'),
            array('created,modified','default',
                'value'=>new CDbExpression('NOW()'),
                'setOnEmpty'=>false,'on'=>'insert'),
			);
	}

	public function relations() {
		return array(
			'localidadIdlocalidad' => array(self::BELONGS_TO, 'Localidad', 'localidad_idlocalidad'),
			'tipodecontribuyenteIdtipocontribuyente' => array(self::BELONGS_TO, 'Tipodecontribuyente', 'tipodecontribuyente_idtipocontribuyente'),
			'ctactes' => array(self::HAS_MANY, 'Ctacte', 'cliente_idcliente'),
			'facturas' => array(self::HAS_MANY, 'Factura', 'cliente_idcliente'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcliente' => Yii::t('app', 'Idcliente'),
			'nombre' => Yii::t('app', 'Nombre'),
			'cuit' => Yii::t('app', 'Cuit'),
			'direccion' => Yii::t('app', 'Direccion'),
			'telefono' => Yii::t('app', 'Telefono'),
			'nombrecontacto' => Yii::t('app', 'Nombre contacto'),
			'email' => Yii::t('app', 'Email'),
			'web' => Yii::t('app', 'Web'),
			'localidad_idlocalidad' => null,
			'tipodecontribuyente_idtipocontribuyente' => Yii::t('app', 'Tipo Contribuyente'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'localidadIdlocalidad' => null,
			'tipodecontribuyenteIdtipocontribuyente' => Yii::t('app', 'Tipo Contribuyente'),
			'ctactes' => null,
			'facturas' => null,
			'estado' => Yii::t('app', 'Estado'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcliente', $this->idcliente);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('cuit', $this->cuit, true);
		$criteria->compare('direccion', $this->direccion, true);
		$criteria->compare('telefono', $this->telefono, true);
		$criteria->compare('nombrecontacto', $this->nombrecontacto, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('web', $this->web, true);
		$criteria->compare('localidad_idlocalidad', $this->localidad_idlocalidad);
		$criteria->compare('tipodecontribuyente_idtipocontribuyente', $this->tipodecontribuyente_idtipocontribuyente);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('estado', $this->estado);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function behaviors(){
	    
		return array(
			'datetimeI18NBehavior' => array('class' => 'ext.DateTimeI18NBehavior.DateTimeI18NBehavior'),
			'ERememberFiltersBehavior' => array(
	            	'class' => 'application.components.ERememberFiltersBehavior',
	               	'defaults'=>array(),           /* optional line */
	               	'defaultStickOnClear'=>false   /* optional line */
	           	),
		); // 'ext' is in Yii 1.0.8 version. For early versions, use 'application.extensions' instead.
	}
}